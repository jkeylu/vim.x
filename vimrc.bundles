"
" author: jKey Lu <jkeylu@gmail.com>
"

if has('vim_starting')
  " Required:
  set runtimepath+=~/.vim/bundle/neobundle.vim/
endif

" Required:
call neobundle#begin(expand('~/.vim/bundle/'))

" let NeoBundle manage NeoBundle
" Required:
NeoBundleFetch 'Shougo/neobundle.vim'

" My Bundles here:
"
NeoBundle 'junegunn/seoul256.vim'
NeoBundle 'jkeylu/vimcdoc'

NeoBundle 'Shougo/vimproc.vim', {
\   'build': {
\     'windows': '"C:\Program Files (x86)\Microsoft Visual Studio 12.0\Common7\Tools\VsDevCmd.bat" && nmake -f make_msvc.mak nodebug=1 "SDK_INCLUDE_DIR=C:\Program Files (x86)\Microsoft SDKs\Windows\v7.1A\Include"',
\     'cygwin': 'make -f make_cygwin.mak',
\     'mac': 'make -f make_mac.mak',
\     'linux': 'make',
\     'unix': 'gmake'
\   }
\ }

NeoBundle 'jkeylu/mark2666'

" Note: Default tab literal is mapped by `<c-v>`
NeoBundle 'ervandew/supertab'

if has('lua')
  " for windows [download Lua](http://lua-users.org/wiki/LuaBinaries) and put
  " the lua52.dll file in the same directory as gvim.exe
  " for Mac OSX `brew install vim --with-lua`
  NeoBundle 'Shougo/neocomplete.vim'
else
  NeoBundle 'Shougo/neocomplcache.vim'
endif


" Usage:
" `<leader>cm` minimal comment
" `<leader>cl` aligned comment
" `<leader>cu` uncomments the selected line(s)
NeoBundle 'scrooloose/nerdcommenter'

" Usage: `<leader>nt`
NeoBundle 'scrooloose/nerdtree'

" Active fork of 'kien/ctrlp.vim'
" Usage:
" `<c-p>`
" `<c-r>` switch to regexp mode
" `<c-d>` toggled on/off searching by filename
" `<c-z>` mark/unmark multiple files and `<c-o>` to open then
NeoBundle 'ctrlpvim/ctrlp.vim'

" Navigate and jump to function defs
"
" Usage:
" `<leader>fu`
" `<leader>fU`
NeoBundle 'tacahiroy/ctrlp-funky'

" Usage: `<c-n>`
NeoBundle 'terryma/vim-multiple-cursors'

" Usage: `<leader><leader>`
NeoBundle 'jlanzarotta/bufexplorer'

" Usage:
" `<c-d>` scroll down
" `<c-u>` scroll up
NeoBundle 'yonchu/accelerated-smooth-scroll'

" Usage: `:StripWhitespace`
NeoBundle 'ntpeters/vim-better-whitespace'

" Usage: The default mapping to toggle the plugin is `<leader>ig`
if v:version > 702
  NeoBundle 'nathanaelkane/vim-indent-guides'
endif

if g:vimx#env.exists('snippet')
  NeoBundle 'MarcWeber/vim-addon-mw-utils'
  NeoBundle 'tomtom/tlib_vim'
  NeoBundle 'honza/vim-snippets'
  NeoBundle 'garbas/vim-snipmate'
endif

" Language specific

" Syntax checking hacks for vim
if g:vimx#env.exists('syntastic')
  NeoBundle 'scrooloose/syntastic'
endif

" Usage: `<c-y>,`
NeoBundleLazy 'mattn/emmet-vim', { 'autoload': { 'filetypes': [ 'html', 'css' ] } }

NeoBundleLazy 'tpope/vim-markdown', { 'autoload': { 'filetypes': [ 'markdown' ] } }

if g:vimx#env.exists('javascript')
  NeoBundleLazy 'wavded/vim-stylus', { 'autoload': { 'filetypes': [ 'stylus' ] } }

  " Usage:
  " Use `gf` inside `require('...')` to jump to source and module files
  " Use `[I` on any keyword to look for it in the current and required files
  " Use `:Nedit module_name` to edit the main file of a module
  " Use `:Nedit module_name/lib/foo` to edit its `lib/foo.js` file
  " Use `:Nedit .` to edit your Node projects main file
  NeoBundleLazy 'moll/vim-node', { 'autoload': { 'filetypes': [ 'javascript' ] } }

  NeoBundleLazy 'guileen/vim-node-dict', { 'autoload': { 'filetypes': [ 'javascript' ] } }
  NeoBundleLazy 'pangloss/vim-javascript', { 'autoload': { 'filetypes': [ 'javascript' ] } }
endif

if g:vimx#env.exists('python')
  NeoBundleLazy 'hynek/vim-python-pep8-indent', { 'autoload': { 'filetypes': [ 'python' ] } }
endif

if g:vimx#env.exists('coffee')
  NeoBundleLazy 'kchmck/vim-coffee-script', { 'autoload': { 'filetypes': [ 'coffee' ] } }
endif

if g:vimx#env.exists('typescript') && (v:version >= 704)
  " Usage: `:make`
  NeoBundleLazy 'leafgarland/typescript-vim', { 'autoload': { 'filetypes': [ 'typescript' ] } }

  " Usage:
  " `<c-]>` Nav to definition
  " `<c-t>` Move the cursor to the location where the last `<c-]>` was typed
  " `<c-^>a` Show references
  " `:TsuquyomiRenameSymbol`
  NeoBundleLazy 'Quramy/tsuquyomi', { 'autoload': { 'filetypes': [ 'typescript' ] } }
endif

if g:vimx#env.exists('c') || g:vimx#env.exists('cpp')
  " Usage: `:A`
  NeoBundleLazy 'vim-scripts/a.vim', { 'autoload': { 'filetypes': [ 'c', 'cpp' ] } }
endif

" vim-scripts repos
NeoBundle 'vim-scripts/DoxygenToolkit.vim'
NeoBundle 'vim-scripts/LargeFile'

if executable('ctags')
  " Usage: `<leader>tl`
  NeoBundle 'majutsushi/tagbar'
endif

if executable('git')
  " Usage:
  " `:Gsplit`, `:Gvsplit`
  " `:Gdiff`
  " `:Gstatus`. Press `-` to add/reset a file's changes, or `p` to add/reset --patch
  " `:Gcommit`
  " `:Glog`
  NeoBundle 'tpope/vim-fugitive'
endif

" No iconv in windows?
" Download: http://sourceforge.net/projects/gettext
" Put "iconv.dll" in the same directory as gvim.exe to be able to edit files in many encodings.
if has('iconv')
  " Usage:
  " `:FencView`
  " `:FencAutoDetect`
  " `:FencManualEncoding utf-8`
  NeoBundle 'mbbill/fencview'
endif

if g:vimx#env.exists('ide')
  " Usage:
  " `:SLoad`
  " `:SSave`
  " `:SDelete`
  " `Startify`
  NeoBundle 'mhinz/vim-startify'
endif

" Always load auto-pairs at last.
NeoBundle 'jiangmiao/auto-pairs'

call neobundle#end()

" If there are uninstalled bundles found on startup,
" this will conveniently prompt you to install them.
NeoBundleCheck

" vim:ft=vim fdm=marker et ts=4 sw=2 sts=2
